version: "3"

services:
    frontend:
        build:
            context: ./frontend
            dockerfile: DockerfileFrontendMMV
        container_name: frontendMMV
        ports:
         - 3000:3000
        volumes:
         - ./frontend:/app
         - /app/node_modules
        environment:
         - CHOKIDAR_USEPOLLING=true # Activa polling para asegurar detección de cambios en Docker
        networks:
         - redwebMMV

    backend:
        build:
            context: ./backend
            dockerfile: DockerfileBackendMMV
        container_name: backendMMV
        command: bash -c "composer install && php -S 0.0.0.0:8000 -t public"
        ports:
         - 8000:8000
        volumes:
         - ./backend:/app
        networks:
         - redwebMMV
            
    web:
        build:
            context: ./web
            dockerfile: DockerfileWebMMV
        container_name: webMMV
        ports:
         - 80:80 # si tienes problemas con el puerto 80 cambia el puerto externo aquí
        networks:
         - redwebMMV

networks:
    redwebMMV:
        driver: bridge